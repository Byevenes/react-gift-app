{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputVale","setInputVale","onSubmit","e","preventDefault","trim","length","categories","type","value","onChange","target","getGif","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","divRoot","document","querySelector","ReactDOM","render"],"mappings":"+LAgCeA,EA7BK,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACPC,mBAAS,IADF,mBAClCC,EADkC,KACvBC,EADuB,KAgBzC,OACE,oCACE,0BAAMC,SAXW,SAACC,GACpBA,EAAEC,iBAEEJ,EAAUK,OAAOC,OAAS,IAC5BR,GAAc,SAACS,GAAD,OAAiBP,GAAjB,mBAA+BO,OAC7CN,EAAa,OAOX,2BAAOO,KAAK,OAAOC,MAAOT,EAAWU,SAhBjB,SAACP,GACzBF,EAAaE,EAAEQ,OAAOF,a,uBCPbG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UACpDH,GAFkB,+DAKDI,MAAMF,GALL,cAKdG,EALc,gBAOGA,EAAKC,OAPR,uBAOZC,EAPY,EAOZA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAblB,kBAgBbM,GAhBa,4CAAH,sDCWJO,EATK,SAAC,GAAuB,EAArBJ,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAChC,OACE,yBAAKc,UAAU,0CACb,2BAAIJ,GACJ,yBAAKK,IAAKf,EAAKgB,IAAKN,MCiBXO,EAnBC,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDN,SAACA,GAAc,IAAD,EACdd,mBAAS,CACjCqB,KAAM,GACNa,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRxB,EAAOC,GAAUwB,MAAK,SAACC,GACrBH,EAAS,CACPf,KAAMkB,EACNL,SAAS,SAGZ,CAACpB,IAEGqB,EDb2BK,CAAa1B,GAAjCa,EADkB,EACxBN,KAAca,EADU,EACVA,QAEtB,OACE,oCACE,wBAAIJ,UAAU,qCAAqChB,GAClDoB,EACC,yBAAKJ,UAAU,oCAAf,gBAEA,yBAAKA,UAAU,aACZH,EAAOJ,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAAaiB,IAAKjB,EAAIC,IAAQD,UEK3BkB,EAhBM,WAAO,IAAD,EACW1C,mBAAS,CAAC,cADrB,mBAClBQ,EADkB,KACNT,EADM,KAGzB,OACE,yBAAK+B,UAAU,OACb,8CACA,kBAAC,EAAD,CAAa/B,cAAeA,IAC5B,6BACA,4BACGS,EAAWe,KAAI,SAACT,GAAD,OACd,kBAAC,EAAD,CAAS2B,IAAK3B,EAAUA,SAAUA,UCPtC6B,G,MAAUC,SAASC,cAAc,SAGvCC,IAASC,OAAO,kBAAC,EAAD,MAAkBJ,I","file":"static/js/main.007caa59.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({ setCategories }) => {\r\n  const [inputVale, setInputVale] = useState('');\r\n\r\n  const handelInputChange = (e) => {\r\n    setInputVale(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (inputVale.trim().length > 2) {\r\n      setCategories((categories) => [inputVale, ...categories]);\r\n      setInputVale('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={handleSubmit}>\r\n        <input type=\"text\" value={inputVale} onChange={handelInputChange} />\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default AddCategory;\r\n","export const getGif = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=sV1mbxYfyetOx0yDm4skXSvLFBdSBUiV`;\r\n\r\n  const resp = await fetch(url);\r\n\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n  return gifs;\r\n};\r\n","import React from 'react';\r\n\r\nconst GifGridItem = ({ id, title, url }) => {\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n      <p>{title}</p>\r\n      <img src={url} alt={title} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n      {loading ? (\r\n        <div className=\"animate__animated animate__flash\">Cargando ...</div>\r\n      ) : (\r\n        <div className=\"card-grid\">\r\n          {images.map((img) => (\r\n            <GifGridItem key={img.id} {...img} />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifGrid;\r\n","import { useEffect, useState } from 'react';\r\nimport { getGif } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGif(category).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state;\r\n};\r\n","import React, { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport GifGrid from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n  const [categories, setCategories] = useState(['One Punch']);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <h2> GifExpertApp </h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </div>\r\n  );\r\n};\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import PrimeraApp from './PrimeraApp'\nimport GifExpertApp from './GifExpertApp.js';\n\nimport './index.css';\n\nconst divRoot = document.querySelector('#app');\n\n// ReactDOM.render( <PrimeraApp saludo=\"Hola, Soy Goku\" />  , divRoot );\nReactDOM.render(<GifExpertApp />, divRoot);\n"],"sourceRoot":""}